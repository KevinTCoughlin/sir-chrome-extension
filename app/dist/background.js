/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1);
module.exports = __webpack_require__(2);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SIR = (function () {
    function SIR() {
        SIR.PLAYER_INSTANCE.src = SIR.STREAM_URL;
        chrome.browserAction.setBadgeText(SIR.getBadge());
        chrome.browserAction.onClicked.addListener(SIR.handleBrowserAction);
    }
    SIR.toggle = function () {
        if (SIR.PLAYER_INSTANCE.paused) {
            SIR.play();
        }
        else {
            SIR.stop();
        }
    };
    SIR.handleBrowserAction = function () {
        SIR.toggle();
        chrome.browserAction.setBadgeText(SIR.getBadge());
    };
    SIR.getBadgeText = function () {
        return SIR.PLAYER_INSTANCE.paused ? SIR.LABEL_OFF : SIR.LABEL_ON;
    };
    SIR.getBadge = function () {
        var badge = { text: SIR.getBadgeText() };
        return badge;
    };
    SIR.stop = function () {
        SIR.PLAYER_INSTANCE.pause();
    };
    SIR.play = function () {
        SIR.PLAYER_INSTANCE.src = SIR.STREAM_URL;
        SIR.PLAYER_INSTANCE.play();
    };
    SIR.STREAM_URL = 'http://64.150.176.42:8242/;stream.mp3';
    SIR.PLAYER_INSTANCE = new Audio();
    SIR.LABEL_OFF = 'OFF';
    SIR.LABEL_ON = 'ON';
    return SIR;
}());
exports.default = new SIR();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2dyb3VuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImJhY2tncm91bmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTtJQVNFO1FBQ0UsR0FBRyxDQUFDLGVBQWUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQztRQUN6QyxNQUFNLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQTtRQUNqRCxNQUFNLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUE7SUFDckUsQ0FBQztJQUthLFVBQU0sR0FBcEI7UUFDRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDL0IsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2IsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2IsQ0FBQztJQUNILENBQUM7SUFLYyx1QkFBbUIsR0FBbEM7UUFDRSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDYixNQUFNLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBS2MsZ0JBQVksR0FBM0I7UUFDRSxNQUFNLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUM7SUFDbkUsQ0FBQztJQUtjLFlBQVEsR0FBdkI7UUFDRSxJQUFJLEtBQUssR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FBQztRQUN6QyxNQUFNLENBQUMsS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUtjLFFBQUksR0FBbkI7UUFDRSxHQUFHLENBQUMsZUFBZSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFLYyxRQUFJLEdBQW5CO1FBQ0UsR0FBRyxDQUFDLGVBQWUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQztRQUN6QyxHQUFHLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzdCLENBQUM7SUE3RHVCLGNBQVUsR0FBRyx1Q0FBdUMsQ0FBQztJQUNyRCxtQkFBZSxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7SUFDOUIsYUFBUyxHQUFHLEtBQUssQ0FBQztJQUNsQixZQUFRLEdBQUcsSUFBSSxDQUFDO0lBMkQxQyxVQUFDO0NBQUEsQUEvREQsSUErREM7QUFFRCxrQkFBZSxJQUFJLEdBQUcsRUFBRSxDQUFDIn0=

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = {
    devtool: 'inline-source-map',
    entry: "./app/scripts/background.ts",
    output: {
        filename: "./app/dist/background.js"
    },
    resolve: {
        extensions: [".webpack.js", ".web.js", ".ts", ".tsx", ".js"]
    },
    module: {
        loaders: [
            { test: /\.tsx?$/, loader: "ts-loader" }
        ]
    }
}

/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,